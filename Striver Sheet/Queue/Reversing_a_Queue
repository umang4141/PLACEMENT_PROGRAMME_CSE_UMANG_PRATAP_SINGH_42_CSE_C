import java.util.Iterator;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Stack;
 
// Java program to reverse a queue
public class Reversing_a_queue{
 
    
 
 
    public static void Print(Queue<Integer> queue)
    {
        while(!queue.isEmpty())
        {
            System.out.print(queue.peek() + ",");
            queue.remove();
        }
       // Integer[] arr1 = new Integer[queue.size()];
      //arr1=queue.toArray(arr1);
      //for(Integer x:arr1)
      //{
        //System.out.print(x + " ");
      //}
     
    }
 
    // Function to reverse the queue
    public static void reversequeue(Queue<Integer> queue)
    {
        Stack<Integer> stack = new Stack<>();
        while(!queue.isEmpty())
        {
            stack.push(queue.peek());
            queue.remove();
        }
        while(!stack.isEmpty())
        {
            queue.add(stack.peek());
            stack.pop();
        }
    }

 
    // Driver code
    public static void main(String args[])
    {
       Queue<Integer> queue = new LinkedList<Integer>();
        queue.add(10);
        queue.add(20);
        queue.add(30);
        queue.add(40);
        queue.add(50);
        queue.add(60);
        queue.add(70);
        queue.add(80);
        queue.add(90);
        queue.add(100);
 
        reversequeue(queue);
        Print(queue);
    }
}
